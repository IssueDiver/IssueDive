name: IssueDive Docker CI Hard

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: issue_dive
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        env:
          DB_URL: jdbc:mysql://mysql:3306/issue_dive?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
          DB_USER: root
          DB_PASSWORD: password
        run: |
          docker build -t issue-dive-app \
            --build-arg DB_URL="$DB_URL" \
            --build-arg DB_USER="$DB_USER" \
            --build-arg DB_PASSWORD="$DB_PASSWORD" \
            .

      - name: Run tests inside Docker container
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/issue_dive?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: password
        run: |
name: IssueDive Docker CI Hard

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: issue_dive
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        env:
          DB_URL: jdbc:mysql://mysql:3306/issue_dive?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
          DB_USER: root
          DB_PASSWORD: password
        run: |
          docker build -t issue-dive-app \
            --build-arg DB_URL="$DB_URL" \
            --build-arg DB_USER="$DB_USER" \
            --build-arg DB_PASSWORD="$DB_PASSWORD" \
            .

      - name: Run tests inside Docker container
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/issue_dive?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: password
        run: |
          echo "Workflow name is: $GITHUB_WORKFLOW_NAME"
          NETWORK_NAME=$(docker network ls --filter label=com.docker.compose.project=$GITHUB_WORKFLOW_NAME --format "{{.Name}}" | head -n 1)
          echo "Using docker network: $NETWORK_NAME"
          
          docker run --rm \
          --network $NETWORK_NAME \
          -e SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL \
          -e SPRING_DATASOURCE_USERNAME=$SPRING_DATASOURCE_USERNAME \
          -e SPRING_DATASOURCE_PASSWORD=$SPRING_DATASOURCE_PASSWORD \
          issue-dive-app ./gradlew test